import telebot
from datetime import datetime
from telebot import types
import re
import os
import time

bot = telebot.TeleBot('6544599844:AAFn8631B3QGkzM_oTwf0JNdgoZw0DyvcHc')


data_folder = '/data'

os.makedirs(data_folder, exist_ok=True)

users_file = os.path.join(data_folder, 'users.txt')
file_path = os.path.join(data_folder, 'resources.txt')

# ID —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
authorized_user_id = [5446991838, 1689568914]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID

def normalize_url(url):
    url = re.sub(r"^(http://|https://)", "", url)   
    url = re.sub(r"^www\.", "", url)   
    return url.rstrip("/")

def get_resource_list():
    with open(file_path, 'r', encoding='utf-8') as file:
        resource_list = [line.strip().lower() for line in file.readlines()]
    resource_list_2 = [normalize_url(link) for link in resource_list]
    
    return resource_list+resource_list_2

def read_users():
    if not os.path.exists(users_file):
        return []
    with open(users_file, 'r') as file:
        return [line.strip() for line in file.readlines()]


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user(user_id):
    if not os.path.exists(users_file):
        with open(users_file, 'w') as file:
            file.write(f"{user_id}\n")
    else:
        with open(users_file, 'a') as file:
            file.write(f"{user_id}\n")


@bot.message_handler(commands=['start'])
def start(message):
    user_id = str(message.chat.id)
    if user_id not in read_users():
        save_user(user_id)
    instruction = (
        "–ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n"
        "1. –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É —Ä–µ—Å—É—Ä—Å–∞.\n"
        "2. –í—Å—Ç–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä–æ–∫—É –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º.\n"
        "3. –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
    )
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    item_clear_history = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—Å—É—Ä—Å')
    bot.send_message(message.chat.id,
                     f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n{instruction}\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /check –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Å—É—Ä—Å–∞ –∏ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—Å—É—Ä—Å".',
                     reply_markup=markup)


@bot.message_handler(commands=['broadcast'])
def broadcast_command(message):
    if message.chat.id in authorized_user_id:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        bot.register_next_step_handler(message, send_broadcast)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


def send_broadcast(message):
    users = read_users()
    for user_id in users:
        try:
            bot.send_message(user_id, message.text)
            time.sleep(0.1)
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–∞")


@bot.message_handler(commands=['addresource'])
def add_resource_command(message):
    if message.chat.id in authorized_user_id:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Å—É—Ä—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        bot.register_next_step_handler(message, save_resource)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


def save_resource(message):
    resource = message.text.strip()
    if resource:
        with open(file_path, 'a') as file:
            file.write(f"{resource}\n")
        bot.send_message(message.chat.id, f"–†–µ—Å—É—Ä—Å '{resource}' –¥–æ–±–∞–≤–ª–µ–Ω.")
    else:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


@bot.message_handler(commands=['check'])
def check(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ—Å—É—Ä—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.', reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def process_message(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π /start –∏–ª–∏ /check
    if message.text.startswith('/start') or message.text.startswith('/check'):
        return
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    current_date = datetime.now().strftime('%d.%m.%Y')

    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
    user_input = message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Å–ø–∏—Å–∫–µ —Ä–µ—Å—É—Ä—Å–æ–≤
    if user_input in get_resource_list():
        bot.send_message(message.chat.id, f'üî¥ –ù–∞ –¥–∞—Ç—É {current_date}, —Ä–µ—Å—É—Ä—Å {user_input} —è–≤–ª—è–µ—Ç—Å—è —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–º!')
    else:
        bot.send_message(message.chat.id,
                         f'‚úÖ –ù–∞ –¥–∞—Ç—É {current_date}, {user_input} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤.')


if __name__ == '__main__':
    bot.polling(none_stop=True)
